//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("RepGlryModel", "FK_GLRY_SampleReports_GLRY_FirmTypes", "GLRY_FirmTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Assette.ReportGallery.Data.Models.FirmTypes), "GLRY_SampleReports", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Assette.ReportGallery.Data.Models.SampleReports), true)]
[assembly: EdmRelationshipAttribute("RepGlryModel", "FK_GLRY_SampleReports_GLRY_ProductType", "GLRY_ProductTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Assette.ReportGallery.Data.Models.ProductTypes), "SampleReports", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Assette.ReportGallery.Data.Models.SampleReports), true)]
[assembly: EdmRelationshipAttribute("RepGlryModel", "FK_GLRY_Designs_GLRY_FirmTypes", "FirmTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Assette.ReportGallery.Data.Models.FirmTypes), "GLRY_TemplateDesigns", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Assette.ReportGallery.Data.Models.TemplateDesigns), true)]
[assembly: EdmRelationshipAttribute("RepGlryModel", "FK_GLRY_Designs_GLRY_ProductType", "ProductTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Assette.ReportGallery.Data.Models.ProductTypes), "GLRY_TemplateDesigns", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Assette.ReportGallery.Data.Models.TemplateDesigns), true)]
[assembly: EdmRelationshipAttribute("RepGlryModel", "FK_GLRY_SampleReportsGLRY_SampleReportPages", "SampleReports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Assette.ReportGallery.Data.Models.SampleReports), "GLRY_SampleReportPages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Assette.ReportGallery.Data.Models.SampleReportPages), true)]
[assembly: EdmRelationshipAttribute("RepGlryModel", "FK_GLRY_DesignsGLRY_DesignPages", "TemplateDesigns", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Assette.ReportGallery.Data.Models.TemplateDesigns), "GLRY_TemplateDesignPages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Assette.ReportGallery.Data.Models.TemplateDesignPages), true)]
[assembly: EdmRelationshipAttribute("RepGlryModel", "FK_paObjects_paObjectCategories", "PAObjectCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Assette.ReportGallery.Data.Models.PAObjectCategory), "paObject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Assette.ReportGallery.Data.Models.PAObject), true)]
[assembly: EdmRelationshipAttribute("RepGlryModel", "FK_paObjects_paObjectTypes", "PAObjectType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Assette.ReportGallery.Data.Models.PAObjectType), "paObject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Assette.ReportGallery.Data.Models.PAObject), true)]
[assembly: EdmRelationshipAttribute("RepGlryModel", "GLRY_UsersInRoles", "GLRY_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Assette.ReportGallery.Data.Models.Users), "GLRY_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Assette.ReportGallery.Data.Models.Roles))]
[assembly: EdmRelationshipAttribute("RepGlryModel", "FK_GLRY_PAObjectPreView_paObjects", "PAObject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Assette.ReportGallery.Data.Models.PAObject), "GLRY_PAObjectPreView", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Assette.ReportGallery.Data.Models.PAObjectPreView), true)]
[assembly: EdmRelationshipAttribute("RepGlryModel", "FK_paObjectMockups_paObjectCategories", "PAObjectCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Assette.ReportGallery.Data.Models.PAObjectCategory), "paObjectMockup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Assette.ReportGallery.Data.Models.PAObjectMockup), true)]
[assembly: EdmRelationshipAttribute("RepGlryModel", "FK_paObjectMockups_paObjectTypes", "PAObjectType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Assette.ReportGallery.Data.Models.PAObjectType), "paObjectMockup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Assette.ReportGallery.Data.Models.PAObjectMockup), true)]
[assembly: EdmRelationshipAttribute("RepGlryModel", "FK_GLRY_paObjectCategoryOrder_paObjectCategories", "PAObjectCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Assette.ReportGallery.Data.Models.PAObjectCategory), "GLRY_paObjectCategoryOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Assette.ReportGallery.Data.Models.PAObjectCategoryOrder), true)]
[assembly: EdmRelationshipAttribute("RepGlryModel", "FK_GLRY_GalleryNotes_GLRY_ProspectsGalleryContents", "GLRY_ProspectsGalleryContents", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Assette.ReportGallery.Data.Models.ProspectsGalleryContents), "GalleryNotes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Assette.ReportGallery.Data.Models.GalleryNotes), true)]
[assembly: EdmRelationshipAttribute("RepGlryModel", "FK_GLRY_ProspectsGalleryContents_GLRY_Prospects", "Prospects", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Assette.ReportGallery.Data.Models.Prospects), "GLRY_ProspectsGalleryContents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Assette.ReportGallery.Data.Models.ProspectsGalleryContents), true)]

#endregion

namespace Assette.ReportGallery.Data.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RepGlryEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RepGlryEntities object using the connection string found in the 'RepGlryEntities' section of the application configuration file.
        /// </summary>
        public RepGlryEntities() : base("name=RepGlryEntities", "RepGlryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RepGlryEntities object.
        /// </summary>
        public RepGlryEntities(string connectionString) : base(connectionString, "RepGlryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RepGlryEntities object.
        /// </summary>
        public RepGlryEntities(EntityConnection connection) : base(connection, "RepGlryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PAObjectCategory> PAObjectCategories1
        {
            get
            {
                if ((_PAObjectCategories1 == null))
                {
                    _PAObjectCategories1 = base.CreateObjectSet<PAObjectCategory>("PAObjectCategories1");
                }
                return _PAObjectCategories1;
            }
        }
        private ObjectSet<PAObjectCategory> _PAObjectCategories1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PAObjectType> PAObjectTypes1
        {
            get
            {
                if ((_PAObjectTypes1 == null))
                {
                    _PAObjectTypes1 = base.CreateObjectSet<PAObjectType>("PAObjectTypes1");
                }
                return _PAObjectTypes1;
            }
        }
        private ObjectSet<PAObjectType> _PAObjectTypes1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FirmTypes> FirmTypes
        {
            get
            {
                if ((_FirmTypes == null))
                {
                    _FirmTypes = base.CreateObjectSet<FirmTypes>("FirmTypes");
                }
                return _FirmTypes;
            }
        }
        private ObjectSet<FirmTypes> _FirmTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SampleReports> SampleReports
        {
            get
            {
                if ((_SampleReports == null))
                {
                    _SampleReports = base.CreateObjectSet<SampleReports>("SampleReports");
                }
                return _SampleReports;
            }
        }
        private ObjectSet<SampleReports> _SampleReports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Prospects> Prospects
        {
            get
            {
                if ((_Prospects == null))
                {
                    _Prospects = base.CreateObjectSet<Prospects>("Prospects");
                }
                return _Prospects;
            }
        }
        private ObjectSet<Prospects> _Prospects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductTypes> ProductTypes
        {
            get
            {
                if ((_ProductTypes == null))
                {
                    _ProductTypes = base.CreateObjectSet<ProductTypes>("ProductTypes");
                }
                return _ProductTypes;
            }
        }
        private ObjectSet<ProductTypes> _ProductTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TemplateDesigns> TemplateDesigns
        {
            get
            {
                if ((_TemplateDesigns == null))
                {
                    _TemplateDesigns = base.CreateObjectSet<TemplateDesigns>("TemplateDesigns");
                }
                return _TemplateDesigns;
            }
        }
        private ObjectSet<TemplateDesigns> _TemplateDesigns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SampleReportPages> SampleReportPages
        {
            get
            {
                if ((_SampleReportPages == null))
                {
                    _SampleReportPages = base.CreateObjectSet<SampleReportPages>("SampleReportPages");
                }
                return _SampleReportPages;
            }
        }
        private ObjectSet<SampleReportPages> _SampleReportPages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TemplateDesignPages> TemplateDesignPages
        {
            get
            {
                if ((_TemplateDesignPages == null))
                {
                    _TemplateDesignPages = base.CreateObjectSet<TemplateDesignPages>("TemplateDesignPages");
                }
                return _TemplateDesignPages;
            }
        }
        private ObjectSet<TemplateDesignPages> _TemplateDesignPages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PAObject> PAObjects1
        {
            get
            {
                if ((_PAObjects1 == null))
                {
                    _PAObjects1 = base.CreateObjectSet<PAObject>("PAObjects1");
                }
                return _PAObjects1;
            }
        }
        private ObjectSet<PAObject> _PAObjects1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GalleryNotes> GalleryNotes
        {
            get
            {
                if ((_GalleryNotes == null))
                {
                    _GalleryNotes = base.CreateObjectSet<GalleryNotes>("GalleryNotes");
                }
                return _GalleryNotes;
            }
        }
        private ObjectSet<GalleryNotes> _GalleryNotes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Roles> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Roles>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Roles> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PAObjectPreView> PAObjectPreViews
        {
            get
            {
                if ((_PAObjectPreViews == null))
                {
                    _PAObjectPreViews = base.CreateObjectSet<PAObjectPreView>("PAObjectPreViews");
                }
                return _PAObjectPreViews;
            }
        }
        private ObjectSet<PAObjectPreView> _PAObjectPreViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PAObjectMockup> PAObjectMockups1
        {
            get
            {
                if ((_PAObjectMockups1 == null))
                {
                    _PAObjectMockups1 = base.CreateObjectSet<PAObjectMockup>("PAObjectMockups1");
                }
                return _PAObjectMockups1;
            }
        }
        private ObjectSet<PAObjectMockup> _PAObjectMockups1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PAObjectCategoryOrder> PAObjectCategoryOrders
        {
            get
            {
                if ((_PAObjectCategoryOrders == null))
                {
                    _PAObjectCategoryOrders = base.CreateObjectSet<PAObjectCategoryOrder>("PAObjectCategoryOrders");
                }
                return _PAObjectCategoryOrders;
            }
        }
        private ObjectSet<PAObjectCategoryOrder> _PAObjectCategoryOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProspectsGalleryContents> ProspectsGalleryContents
        {
            get
            {
                if ((_ProspectsGalleryContents == null))
                {
                    _ProspectsGalleryContents = base.CreateObjectSet<ProspectsGalleryContents>("ProspectsGalleryContents");
                }
                return _ProspectsGalleryContents;
            }
        }
        private ObjectSet<ProspectsGalleryContents> _ProspectsGalleryContents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientConfiguration> ClientConfigurations
        {
            get
            {
                if ((_ClientConfigurations == null))
                {
                    _ClientConfigurations = base.CreateObjectSet<ClientConfiguration>("ClientConfigurations");
                }
                return _ClientConfigurations;
            }
        }
        private ObjectSet<ClientConfiguration> _ClientConfigurations;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PAObjectCategories1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPAObjectCategories1(PAObjectCategory pAObjectCategory)
        {
            base.AddObject("PAObjectCategories1", pAObjectCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PAObjectTypes1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPAObjectTypes1(PAObjectType pAObjectType)
        {
            base.AddObject("PAObjectTypes1", pAObjectType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FirmTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFirmTypes(FirmTypes firmTypes)
        {
            base.AddObject("FirmTypes", firmTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SampleReports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSampleReports(SampleReports sampleReports)
        {
            base.AddObject("SampleReports", sampleReports);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Prospects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProspects(Prospects prospects)
        {
            base.AddObject("Prospects", prospects);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductTypes(ProductTypes productTypes)
        {
            base.AddObject("ProductTypes", productTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TemplateDesigns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTemplateDesigns(TemplateDesigns templateDesigns)
        {
            base.AddObject("TemplateDesigns", templateDesigns);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SampleReportPages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSampleReportPages(SampleReportPages sampleReportPages)
        {
            base.AddObject("SampleReportPages", sampleReportPages);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TemplateDesignPages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTemplateDesignPages(TemplateDesignPages templateDesignPages)
        {
            base.AddObject("TemplateDesignPages", templateDesignPages);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PAObjects1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPAObjects1(PAObject pAObject)
        {
            base.AddObject("PAObjects1", pAObject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GalleryNotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGalleryNotes(GalleryNotes galleryNotes)
        {
            base.AddObject("GalleryNotes", galleryNotes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Roles roles)
        {
            base.AddObject("Roles", roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PAObjectPreViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPAObjectPreViews(PAObjectPreView pAObjectPreView)
        {
            base.AddObject("PAObjectPreViews", pAObjectPreView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PAObjectMockups1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPAObjectMockups1(PAObjectMockup pAObjectMockup)
        {
            base.AddObject("PAObjectMockups1", pAObjectMockup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PAObjectCategoryOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPAObjectCategoryOrders(PAObjectCategoryOrder pAObjectCategoryOrder)
        {
            base.AddObject("PAObjectCategoryOrders", pAObjectCategoryOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProspectsGalleryContents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProspectsGalleryContents(ProspectsGalleryContents prospectsGalleryContents)
        {
            base.AddObject("ProspectsGalleryContents", prospectsGalleryContents);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientConfigurations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientConfigurations(ClientConfiguration clientConfiguration)
        {
            base.AddObject("ClientConfigurations", clientConfiguration);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepGlryModel", Name="ClientConfiguration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientConfiguration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientConfiguration object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="paramName">Initial value of the ParamName property.</param>
        /// <param name="isApplicationVariable">Initial value of the IsApplicationVariable property.</param>
        public static ClientConfiguration CreateClientConfiguration(global::System.Int32 id, global::System.String paramName, global::System.Int32 isApplicationVariable)
        {
            ClientConfiguration clientConfiguration = new ClientConfiguration();
            clientConfiguration.ID = id;
            clientConfiguration.ParamName = paramName;
            clientConfiguration.IsApplicationVariable = isApplicationVariable;
            return clientConfiguration;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ParamName
        {
            get
            {
                return _ParamName;
            }
            set
            {
                OnParamNameChanging(value);
                ReportPropertyChanging("ParamName");
                _ParamName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ParamName");
                OnParamNameChanged();
            }
        }
        private global::System.String _ParamName;
        partial void OnParamNameChanging(global::System.String value);
        partial void OnParamNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParamValue
        {
            get
            {
                return _ParamValue;
            }
            set
            {
                OnParamValueChanging(value);
                ReportPropertyChanging("ParamValue");
                _ParamValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParamValue");
                OnParamValueChanged();
            }
        }
        private global::System.String _ParamValue;
        partial void OnParamValueChanging(global::System.String value);
        partial void OnParamValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataType
        {
            get
            {
                return _DataType;
            }
            set
            {
                OnDataTypeChanging(value);
                ReportPropertyChanging("DataType");
                _DataType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataType");
                OnDataTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _DataType;
        partial void OnDataTypeChanging(Nullable<global::System.Int32> value);
        partial void OnDataTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IsApplicationVariable
        {
            get
            {
                return _IsApplicationVariable;
            }
            set
            {
                OnIsApplicationVariableChanging(value);
                ReportPropertyChanging("IsApplicationVariable");
                _IsApplicationVariable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApplicationVariable");
                OnIsApplicationVariableChanged();
            }
        }
        private global::System.Int32 _IsApplicationVariable;
        partial void OnIsApplicationVariableChanging(global::System.Int32 value);
        partial void OnIsApplicationVariableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepGlryModel", Name="FirmTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FirmTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FirmTypes object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firmName">Initial value of the FirmName property.</param>
        public static FirmTypes CreateFirmTypes(global::System.Int32 id, global::System.String firmName)
        {
            FirmTypes firmTypes = new FirmTypes();
            firmTypes.Id = id;
            firmTypes.FirmName = firmName;
            return firmTypes;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirmName
        {
            get
            {
                return _FirmName;
            }
            set
            {
                OnFirmNameChanging(value);
                ReportPropertyChanging("FirmName");
                _FirmName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirmName");
                OnFirmNameChanged();
            }
        }
        private global::System.String _FirmName;
        partial void OnFirmNameChanging(global::System.String value);
        partial void OnFirmNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_SampleReports_GLRY_FirmTypes", "GLRY_SampleReports")]
        public EntityCollection<SampleReports> GLRY_SampleReports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SampleReports>("RepGlryModel.FK_GLRY_SampleReports_GLRY_FirmTypes", "GLRY_SampleReports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SampleReports>("RepGlryModel.FK_GLRY_SampleReports_GLRY_FirmTypes", "GLRY_SampleReports", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_Designs_GLRY_FirmTypes", "GLRY_TemplateDesigns")]
        public EntityCollection<TemplateDesigns> GLRY_TemplateDesigns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TemplateDesigns>("RepGlryModel.FK_GLRY_Designs_GLRY_FirmTypes", "GLRY_TemplateDesigns");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TemplateDesigns>("RepGlryModel.FK_GLRY_Designs_GLRY_FirmTypes", "GLRY_TemplateDesigns", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepGlryModel", Name="GalleryNotes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GalleryNotes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GalleryNotes object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="note">Initial value of the Note property.</param>
        /// <param name="galleryContentId">Initial value of the GalleryContentId property.</param>
        /// <param name="addedDate">Initial value of the AddedDate property.</param>
        public static GalleryNotes CreateGalleryNotes(global::System.Int32 id, global::System.String note, global::System.Int32 galleryContentId, global::System.DateTime addedDate)
        {
            GalleryNotes galleryNotes = new GalleryNotes();
            galleryNotes.Id = id;
            galleryNotes.Note = note;
            galleryNotes.GalleryContentId = galleryContentId;
            galleryNotes.AddedDate = addedDate;
            return galleryNotes;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GalleryContentId
        {
            get
            {
                return _GalleryContentId;
            }
            set
            {
                OnGalleryContentIdChanging(value);
                ReportPropertyChanging("GalleryContentId");
                _GalleryContentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GalleryContentId");
                OnGalleryContentIdChanged();
            }
        }
        private global::System.Int32 _GalleryContentId;
        partial void OnGalleryContentIdChanging(global::System.Int32 value);
        partial void OnGalleryContentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddedDate
        {
            get
            {
                return _AddedDate;
            }
            set
            {
                OnAddedDateChanging(value);
                ReportPropertyChanging("AddedDate");
                _AddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddedDate");
                OnAddedDateChanged();
            }
        }
        private global::System.DateTime _AddedDate;
        partial void OnAddedDateChanging(global::System.DateTime value);
        partial void OnAddedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_GalleryNotes_GLRY_ProspectsGalleryContents", "GLRY_ProspectsGalleryContents")]
        public ProspectsGalleryContents GLRY_ProspectsGalleryContents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProspectsGalleryContents>("RepGlryModel.FK_GLRY_GalleryNotes_GLRY_ProspectsGalleryContents", "GLRY_ProspectsGalleryContents").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProspectsGalleryContents>("RepGlryModel.FK_GLRY_GalleryNotes_GLRY_ProspectsGalleryContents", "GLRY_ProspectsGalleryContents").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProspectsGalleryContents> GLRY_ProspectsGalleryContentsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProspectsGalleryContents>("RepGlryModel.FK_GLRY_GalleryNotes_GLRY_ProspectsGalleryContents", "GLRY_ProspectsGalleryContents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProspectsGalleryContents>("RepGlryModel.FK_GLRY_GalleryNotes_GLRY_ProspectsGalleryContents", "GLRY_ProspectsGalleryContents", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepGlryModel", Name="PAObject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PAObject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PAObject object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="objectPackGuid">Initial value of the ObjectPackGuid property.</param>
        public static PAObject CreatePAObject(global::System.Int32 id, global::System.Boolean isDeleted, global::System.Guid objectPackGuid)
        {
            PAObject pAObject = new PAObject();
            pAObject.ID = id;
            pAObject.IsDeleted = isDeleted;
            pAObject.ObjectPackGuid = objectPackGuid;
            return pAObject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObjectTypeID
        {
            get
            {
                return _ObjectTypeID;
            }
            set
            {
                OnObjectTypeIDChanging(value);
                ReportPropertyChanging("ObjectTypeID");
                _ObjectTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectTypeID");
                OnObjectTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ObjectTypeID;
        partial void OnObjectTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnObjectTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParamsXML
        {
            get
            {
                return _ParamsXML;
            }
            set
            {
                OnParamsXMLChanging(value);
                ReportPropertyChanging("ParamsXML");
                _ParamsXML = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParamsXML");
                OnParamsXMLChanged();
            }
        }
        private global::System.String _ParamsXML;
        partial void OnParamsXMLChanging(global::System.String value);
        partial void OnParamsXMLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SPName
        {
            get
            {
                return _SPName;
            }
            set
            {
                OnSPNameChanging(value);
                ReportPropertyChanging("SPName");
                _SPName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SPName");
                OnSPNameChanged();
            }
        }
        private global::System.String _SPName;
        partial void OnSPNameChanging(global::System.String value);
        partial void OnSPNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ObjectXML
        {
            get
            {
                return _ObjectXML;
            }
            set
            {
                OnObjectXMLChanging(value);
                ReportPropertyChanging("ObjectXML");
                _ObjectXML = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObjectXML");
                OnObjectXMLChanged();
            }
        }
        private global::System.String _ObjectXML;
        partial void OnObjectXMLChanging(global::System.String value);
        partial void OnObjectXMLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyXML
        {
            get
            {
                return _PropertyXML;
            }
            set
            {
                OnPropertyXMLChanging(value);
                ReportPropertyChanging("PropertyXML");
                _PropertyXML = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PropertyXML");
                OnPropertyXMLChanged();
            }
        }
        private global::System.String _PropertyXML;
        partial void OnPropertyXMLChanging(global::System.String value);
        partial void OnPropertyXMLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NodeValue
        {
            get
            {
                return _NodeValue;
            }
            set
            {
                OnNodeValueChanging(value);
                ReportPropertyChanging("NodeValue");
                _NodeValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NodeValue");
                OnNodeValueChanged();
            }
        }
        private global::System.String _NodeValue;
        partial void OnNodeValueChanging(global::System.String value);
        partial void OnNodeValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FormatXML
        {
            get
            {
                return _FormatXML;
            }
            set
            {
                OnFormatXMLChanging(value);
                ReportPropertyChanging("FormatXML");
                _FormatXML = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FormatXML");
                OnFormatXMLChanged();
            }
        }
        private global::System.String _FormatXML;
        partial void OnFormatXMLChanging(global::System.String value);
        partial void OnFormatXMLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ObjectTag
        {
            get
            {
                return _ObjectTag;
            }
            set
            {
                OnObjectTagChanging(value);
                ReportPropertyChanging("ObjectTag");
                _ObjectTag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObjectTag");
                OnObjectTagChanged();
            }
        }
        private global::System.String _ObjectTag;
        partial void OnObjectTagChanging(global::System.String value);
        partial void OnObjectTagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransformXSL
        {
            get
            {
                return _TransformXSL;
            }
            set
            {
                OnTransformXSLChanging(value);
                ReportPropertyChanging("TransformXSL");
                _TransformXSL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransformXSL");
                OnTransformXSLChanged();
            }
        }
        private global::System.String _TransformXSL;
        partial void OnTransformXSLChanging(global::System.String value);
        partial void OnTransformXSLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] BinaryImage
        {
            get
            {
                return StructuralObject.GetValidValue(_BinaryImage);
            }
            set
            {
                OnBinaryImageChanging(value);
                ReportPropertyChanging("BinaryImage");
                _BinaryImage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BinaryImage");
                OnBinaryImageChanged();
            }
        }
        private global::System.Byte[] _BinaryImage;
        partial void OnBinaryImageChanging(global::System.Byte[] value);
        partial void OnBinaryImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private Nullable<global::System.Int32> _Height;
        partial void OnHeightChanging(Nullable<global::System.Int32> value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private Nullable<global::System.Int32> _Width;
        partial void OnWidthChanging(Nullable<global::System.Int32> value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] PowerPointFile
        {
            get
            {
                return StructuralObject.GetValidValue(_PowerPointFile);
            }
            set
            {
                OnPowerPointFileChanging(value);
                ReportPropertyChanging("PowerPointFile");
                _PowerPointFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PowerPointFile");
                OnPowerPointFileChanged();
            }
        }
        private global::System.Byte[] _PowerPointFile;
        partial void OnPowerPointFileChanging(global::System.Byte[] value);
        partial void OnPowerPointFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Int32> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Int32> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedDate
        {
            get
            {
                return _DeletedDate;
            }
            set
            {
                OnDeletedDateChanging(value);
                ReportPropertyChanging("DeletedDate");
                _DeletedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedDate");
                OnDeletedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedDate;
        partial void OnDeletedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObjectCategoryID
        {
            get
            {
                return _ObjectCategoryID;
            }
            set
            {
                OnObjectCategoryIDChanging(value);
                ReportPropertyChanging("ObjectCategoryID");
                _ObjectCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectCategoryID");
                OnObjectCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ObjectCategoryID;
        partial void OnObjectCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnObjectCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ObjectID
        {
            get
            {
                return _ObjectID;
            }
            set
            {
                OnObjectIDChanging(value);
                ReportPropertyChanging("ObjectID");
                _ObjectID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObjectID");
                OnObjectIDChanged();
            }
        }
        private global::System.String _ObjectID;
        partial void OnObjectIDChanging(global::System.String value);
        partial void OnObjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObjectPackID
        {
            get
            {
                return _ObjectPackID;
            }
            set
            {
                OnObjectPackIDChanging(value);
                ReportPropertyChanging("ObjectPackID");
                _ObjectPackID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectPackID");
                OnObjectPackIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ObjectPackID;
        partial void OnObjectPackIDChanging(Nullable<global::System.Int32> value);
        partial void OnObjectPackIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ObjectPackGuid
        {
            get
            {
                return _ObjectPackGuid;
            }
            set
            {
                OnObjectPackGuidChanging(value);
                ReportPropertyChanging("ObjectPackGuid");
                _ObjectPackGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectPackGuid");
                OnObjectPackGuidChanged();
            }
        }
        private global::System.Guid _ObjectPackGuid;
        partial void OnObjectPackGuidChanging(global::System.Guid value);
        partial void OnObjectPackGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] ObjectImage
        {
            get
            {
                return StructuralObject.GetValidValue(_ObjectImage);
            }
            set
            {
                OnObjectImageChanging(value);
                ReportPropertyChanging("ObjectImage");
                _ObjectImage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObjectImage");
                OnObjectImageChanged();
            }
        }
        private global::System.Byte[] _ObjectImage;
        partial void OnObjectImageChanging(global::System.Byte[] value);
        partial void OnObjectImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] ObjectThumbnail
        {
            get
            {
                return StructuralObject.GetValidValue(_ObjectThumbnail);
            }
            set
            {
                OnObjectThumbnailChanging(value);
                ReportPropertyChanging("ObjectThumbnail");
                _ObjectThumbnail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObjectThumbnail");
                OnObjectThumbnailChanged();
            }
        }
        private global::System.Byte[] _ObjectThumbnail;
        partial void OnObjectThumbnailChanging(global::System.Byte[] value);
        partial void OnObjectThumbnailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientType
        {
            get
            {
                return _ClientType;
            }
            set
            {
                OnClientTypeChanging(value);
                ReportPropertyChanging("ClientType");
                _ClientType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientType");
                OnClientTypeChanged();
            }
        }
        private global::System.String _ClientType;
        partial void OnClientTypeChanging(global::System.String value);
        partial void OnClientTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_paObjects_paObjectCategories", "PAObjectCategory")]
        public PAObjectCategory paObjectCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PAObjectCategory>("RepGlryModel.FK_paObjects_paObjectCategories", "PAObjectCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PAObjectCategory>("RepGlryModel.FK_paObjects_paObjectCategories", "PAObjectCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PAObjectCategory> paObjectCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PAObjectCategory>("RepGlryModel.FK_paObjects_paObjectCategories", "PAObjectCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PAObjectCategory>("RepGlryModel.FK_paObjects_paObjectCategories", "PAObjectCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_paObjects_paObjectTypes", "PAObjectType")]
        public PAObjectType paObjectType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PAObjectType>("RepGlryModel.FK_paObjects_paObjectTypes", "PAObjectType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PAObjectType>("RepGlryModel.FK_paObjects_paObjectTypes", "PAObjectType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PAObjectType> paObjectTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PAObjectType>("RepGlryModel.FK_paObjects_paObjectTypes", "PAObjectType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PAObjectType>("RepGlryModel.FK_paObjects_paObjectTypes", "PAObjectType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_PAObjectPreView_paObjects", "GLRY_PAObjectPreView")]
        public EntityCollection<PAObjectPreView> GLRY_PAObjectPreView
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PAObjectPreView>("RepGlryModel.FK_GLRY_PAObjectPreView_paObjects", "GLRY_PAObjectPreView");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PAObjectPreView>("RepGlryModel.FK_GLRY_PAObjectPreView_paObjects", "GLRY_PAObjectPreView", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepGlryModel", Name="PAObjectCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PAObjectCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PAObjectCategory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="prefix">Initial value of the Prefix property.</param>
        public static PAObjectCategory CreatePAObjectCategory(global::System.Int32 id, global::System.String category, global::System.String prefix)
        {
            PAObjectCategory pAObjectCategory = new PAObjectCategory();
            pAObjectCategory.ID = id;
            pAObjectCategory.Category = category;
            pAObjectCategory.Prefix = prefix;
            return pAObjectCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Prefix
        {
            get
            {
                return _Prefix;
            }
            set
            {
                OnPrefixChanging(value);
                ReportPropertyChanging("Prefix");
                _Prefix = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Prefix");
                OnPrefixChanged();
            }
        }
        private global::System.String _Prefix;
        partial void OnPrefixChanging(global::System.String value);
        partial void OnPrefixChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_paObjects_paObjectCategories", "paObject")]
        public EntityCollection<PAObject> paObjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PAObject>("RepGlryModel.FK_paObjects_paObjectCategories", "paObject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PAObject>("RepGlryModel.FK_paObjects_paObjectCategories", "paObject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_paObjectMockups_paObjectCategories", "paObjectMockup")]
        public EntityCollection<PAObjectMockup> paObjectMockups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PAObjectMockup>("RepGlryModel.FK_paObjectMockups_paObjectCategories", "paObjectMockup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PAObjectMockup>("RepGlryModel.FK_paObjectMockups_paObjectCategories", "paObjectMockup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_paObjectCategoryOrder_paObjectCategories", "GLRY_paObjectCategoryOrder")]
        public EntityCollection<PAObjectCategoryOrder> GLRY_paObjectCategoryOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PAObjectCategoryOrder>("RepGlryModel.FK_GLRY_paObjectCategoryOrder_paObjectCategories", "GLRY_paObjectCategoryOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PAObjectCategoryOrder>("RepGlryModel.FK_GLRY_paObjectCategoryOrder_paObjectCategories", "GLRY_paObjectCategoryOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepGlryModel", Name="PAObjectCategoryOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PAObjectCategoryOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PAObjectCategoryOrder object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="paObjectCategoryId">Initial value of the PaObjectCategoryId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="isVisible">Initial value of the IsVisible property.</param>
        public static PAObjectCategoryOrder CreatePAObjectCategoryOrder(global::System.Int32 id, global::System.Int32 paObjectCategoryId, global::System.Int32 sortOrder, global::System.Boolean isVisible)
        {
            PAObjectCategoryOrder pAObjectCategoryOrder = new PAObjectCategoryOrder();
            pAObjectCategoryOrder.Id = id;
            pAObjectCategoryOrder.PaObjectCategoryId = paObjectCategoryId;
            pAObjectCategoryOrder.SortOrder = sortOrder;
            pAObjectCategoryOrder.IsVisible = isVisible;
            return pAObjectCategoryOrder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaObjectCategoryId
        {
            get
            {
                return _PaObjectCategoryId;
            }
            set
            {
                OnPaObjectCategoryIdChanging(value);
                ReportPropertyChanging("PaObjectCategoryId");
                _PaObjectCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaObjectCategoryId");
                OnPaObjectCategoryIdChanged();
            }
        }
        private global::System.Int32 _PaObjectCategoryId;
        partial void OnPaObjectCategoryIdChanging(global::System.Int32 value);
        partial void OnPaObjectCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVisible
        {
            get
            {
                return _IsVisible;
            }
            set
            {
                OnIsVisibleChanging(value);
                ReportPropertyChanging("IsVisible");
                _IsVisible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVisible");
                OnIsVisibleChanged();
            }
        }
        private global::System.Boolean _IsVisible;
        partial void OnIsVisibleChanging(global::System.Boolean value);
        partial void OnIsVisibleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_paObjectCategoryOrder_paObjectCategories", "PAObjectCategory")]
        public PAObjectCategory paObjectCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PAObjectCategory>("RepGlryModel.FK_GLRY_paObjectCategoryOrder_paObjectCategories", "PAObjectCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PAObjectCategory>("RepGlryModel.FK_GLRY_paObjectCategoryOrder_paObjectCategories", "PAObjectCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PAObjectCategory> paObjectCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PAObjectCategory>("RepGlryModel.FK_GLRY_paObjectCategoryOrder_paObjectCategories", "PAObjectCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PAObjectCategory>("RepGlryModel.FK_GLRY_paObjectCategoryOrder_paObjectCategories", "PAObjectCategory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepGlryModel", Name="PAObjectMockup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PAObjectMockup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PAObjectMockup object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static PAObjectMockup CreatePAObjectMockup(global::System.Int32 id)
        {
            PAObjectMockup pAObjectMockup = new PAObjectMockup();
            pAObjectMockup.ID = id;
            return pAObjectMockup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObjectCategoryID
        {
            get
            {
                return _ObjectCategoryID;
            }
            set
            {
                OnObjectCategoryIDChanging(value);
                ReportPropertyChanging("ObjectCategoryID");
                _ObjectCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectCategoryID");
                OnObjectCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ObjectCategoryID;
        partial void OnObjectCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnObjectCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObjectTypeID
        {
            get
            {
                return _ObjectTypeID;
            }
            set
            {
                OnObjectTypeIDChanging(value);
                ReportPropertyChanging("ObjectTypeID");
                _ObjectTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectTypeID");
                OnObjectTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ObjectTypeID;
        partial void OnObjectTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnObjectTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientType
        {
            get
            {
                return _ClientType;
            }
            set
            {
                OnClientTypeChanging(value);
                ReportPropertyChanging("ClientType");
                _ClientType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientType");
                OnClientTypeChanged();
            }
        }
        private global::System.String _ClientType;
        partial void OnClientTypeChanging(global::System.String value);
        partial void OnClientTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] ObjectImage
        {
            get
            {
                return StructuralObject.GetValidValue(_ObjectImage);
            }
            set
            {
                OnObjectImageChanging(value);
                ReportPropertyChanging("ObjectImage");
                _ObjectImage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObjectImage");
                OnObjectImageChanged();
            }
        }
        private global::System.Byte[] _ObjectImage;
        partial void OnObjectImageChanging(global::System.Byte[] value);
        partial void OnObjectImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] ObjectThumbnail
        {
            get
            {
                return StructuralObject.GetValidValue(_ObjectThumbnail);
            }
            set
            {
                OnObjectThumbnailChanging(value);
                ReportPropertyChanging("ObjectThumbnail");
                _ObjectThumbnail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObjectThumbnail");
                OnObjectThumbnailChanged();
            }
        }
        private global::System.Byte[] _ObjectThumbnail;
        partial void OnObjectThumbnailChanging(global::System.Byte[] value);
        partial void OnObjectThumbnailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> PreRegisterPreView
        {
            get
            {
                return _PreRegisterPreView;
            }
            set
            {
                OnPreRegisterPreViewChanging(value);
                ReportPropertyChanging("PreRegisterPreView");
                _PreRegisterPreView = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreRegisterPreView");
                OnPreRegisterPreViewChanged();
            }
        }
        private Nullable<global::System.Boolean> _PreRegisterPreView;
        partial void OnPreRegisterPreViewChanging(Nullable<global::System.Boolean> value);
        partial void OnPreRegisterPreViewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ViewCount
        {
            get
            {
                return _ViewCount;
            }
            set
            {
                OnViewCountChanging(value);
                ReportPropertyChanging("ViewCount");
                _ViewCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewCount");
                OnViewCountChanged();
            }
        }
        private Nullable<global::System.Int32> _ViewCount;
        partial void OnViewCountChanging(Nullable<global::System.Int32> value);
        partial void OnViewCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UploadedDate
        {
            get
            {
                return _UploadedDate;
            }
            set
            {
                OnUploadedDateChanging(value);
                ReportPropertyChanging("UploadedDate");
                _UploadedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadedDate");
                OnUploadedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UploadedDate;
        partial void OnUploadedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUploadedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UploadedBy
        {
            get
            {
                return _UploadedBy;
            }
            set
            {
                OnUploadedByChanging(value);
                ReportPropertyChanging("UploadedBy");
                _UploadedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadedBy");
                OnUploadedByChanged();
            }
        }
        private Nullable<global::System.Guid> _UploadedBy;
        partial void OnUploadedByChanging(Nullable<global::System.Guid> value);
        partial void OnUploadedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_paObjectMockups_paObjectCategories", "PAObjectCategory")]
        public PAObjectCategory paObjectCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PAObjectCategory>("RepGlryModel.FK_paObjectMockups_paObjectCategories", "PAObjectCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PAObjectCategory>("RepGlryModel.FK_paObjectMockups_paObjectCategories", "PAObjectCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PAObjectCategory> paObjectCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PAObjectCategory>("RepGlryModel.FK_paObjectMockups_paObjectCategories", "PAObjectCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PAObjectCategory>("RepGlryModel.FK_paObjectMockups_paObjectCategories", "PAObjectCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_paObjectMockups_paObjectTypes", "PAObjectType")]
        public PAObjectType paObjectType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PAObjectType>("RepGlryModel.FK_paObjectMockups_paObjectTypes", "PAObjectType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PAObjectType>("RepGlryModel.FK_paObjectMockups_paObjectTypes", "PAObjectType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PAObjectType> paObjectTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PAObjectType>("RepGlryModel.FK_paObjectMockups_paObjectTypes", "PAObjectType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PAObjectType>("RepGlryModel.FK_paObjectMockups_paObjectTypes", "PAObjectType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepGlryModel", Name="PAObjectPreView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PAObjectPreView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PAObjectPreView object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        public static PAObjectPreView CreatePAObjectPreView(global::System.Int32 id, global::System.Int32 objectId)
        {
            PAObjectPreView pAObjectPreView = new PAObjectPreView();
            pAObjectPreView.Id = id;
            pAObjectPreView.ObjectId = objectId;
            return pAObjectPreView;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                OnObjectIdChanging(value);
                ReportPropertyChanging("ObjectId");
                _ObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectId");
                OnObjectIdChanged();
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_PAObjectPreView_paObjects", "PAObject")]
        public PAObject paObject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PAObject>("RepGlryModel.FK_GLRY_PAObjectPreView_paObjects", "PAObject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PAObject>("RepGlryModel.FK_GLRY_PAObjectPreView_paObjects", "PAObject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PAObject> paObjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PAObject>("RepGlryModel.FK_GLRY_PAObjectPreView_paObjects", "PAObject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PAObject>("RepGlryModel.FK_GLRY_PAObjectPreView_paObjects", "PAObject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepGlryModel", Name="PAObjectType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PAObjectType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PAObjectType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static PAObjectType CreatePAObjectType(global::System.Int32 id)
        {
            PAObjectType pAObjectType = new PAObjectType();
            pAObjectType.ID = id;
            return pAObjectType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_paObjects_paObjectTypes", "paObject")]
        public EntityCollection<PAObject> paObjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PAObject>("RepGlryModel.FK_paObjects_paObjectTypes", "paObject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PAObject>("RepGlryModel.FK_paObjects_paObjectTypes", "paObject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_paObjectMockups_paObjectTypes", "paObjectMockup")]
        public EntityCollection<PAObjectMockup> paObjectMockups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PAObjectMockup>("RepGlryModel.FK_paObjectMockups_paObjectTypes", "paObjectMockup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PAObjectMockup>("RepGlryModel.FK_paObjectMockups_paObjectTypes", "paObjectMockup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepGlryModel", Name="ProductTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductTypes object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="productName">Initial value of the ProductName property.</param>
        public static ProductTypes CreateProductTypes(global::System.Int32 id, global::System.String productName)
        {
            ProductTypes productTypes = new ProductTypes();
            productTypes.Id = id;
            productTypes.ProductName = productName;
            return productTypes;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_SampleReports_GLRY_ProductType", "SampleReports")]
        public EntityCollection<SampleReports> GLRY_SampleReports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SampleReports>("RepGlryModel.FK_GLRY_SampleReports_GLRY_ProductType", "SampleReports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SampleReports>("RepGlryModel.FK_GLRY_SampleReports_GLRY_ProductType", "SampleReports", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_Designs_GLRY_ProductType", "GLRY_TemplateDesigns")]
        public EntityCollection<TemplateDesigns> GLRY_TemplateDesigns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TemplateDesigns>("RepGlryModel.FK_GLRY_Designs_GLRY_ProductType", "GLRY_TemplateDesigns");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TemplateDesigns>("RepGlryModel.FK_GLRY_Designs_GLRY_ProductType", "GLRY_TemplateDesigns", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepGlryModel", Name="Prospects")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Prospects : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Prospects object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="company">Initial value of the Company property.</param>
        /// <param name="registeredIP">Initial value of the RegisteredIP property.</param>
        /// <param name="registeredDate">Initial value of the RegisteredDate property.</param>
        /// <param name="jobTitle">Initial value of the JobTitle property.</param>
        public static Prospects CreateProspects(global::System.Guid id, global::System.String firstName, global::System.String lastName, global::System.String email, global::System.String company, global::System.String registeredIP, global::System.DateTime registeredDate, global::System.String jobTitle)
        {
            Prospects prospects = new Prospects();
            prospects.Id = id;
            prospects.FirstName = firstName;
            prospects.LastName = lastName;
            prospects.Email = email;
            prospects.Company = company;
            prospects.RegisteredIP = registeredIP;
            prospects.RegisteredDate = registeredDate;
            prospects.JobTitle = jobTitle;
            return prospects;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Company
        {
            get
            {
                return _Company;
            }
            set
            {
                OnCompanyChanging(value);
                ReportPropertyChanging("Company");
                _Company = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Company");
                OnCompanyChanged();
            }
        }
        private global::System.String _Company;
        partial void OnCompanyChanging(global::System.String value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegisteredIP
        {
            get
            {
                return _RegisteredIP;
            }
            set
            {
                OnRegisteredIPChanging(value);
                ReportPropertyChanging("RegisteredIP");
                _RegisteredIP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RegisteredIP");
                OnRegisteredIPChanged();
            }
        }
        private global::System.String _RegisteredIP;
        partial void OnRegisteredIPChanging(global::System.String value);
        partial void OnRegisteredIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegisteredDate
        {
            get
            {
                return _RegisteredDate;
            }
            set
            {
                OnRegisteredDateChanging(value);
                ReportPropertyChanging("RegisteredDate");
                _RegisteredDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegisteredDate");
                OnRegisteredDateChanged();
            }
        }
        private global::System.DateTime _RegisteredDate;
        partial void OnRegisteredDateChanging(global::System.DateTime value);
        partial void OnRegisteredDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobTitle
        {
            get
            {
                return _JobTitle;
            }
            set
            {
                OnJobTitleChanging(value);
                ReportPropertyChanging("JobTitle");
                _JobTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JobTitle");
                OnJobTitleChanged();
            }
        }
        private global::System.String _JobTitle;
        partial void OnJobTitleChanging(global::System.String value);
        partial void OnJobTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirmAUM
        {
            get
            {
                return _FirmAUM;
            }
            set
            {
                OnFirmAUMChanging(value);
                ReportPropertyChanging("FirmAUM");
                _FirmAUM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirmAUM");
                OnFirmAUMChanged();
            }
        }
        private global::System.String _FirmAUM;
        partial void OnFirmAUMChanging(global::System.String value);
        partial void OnFirmAUMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirmType
        {
            get
            {
                return _FirmType;
            }
            set
            {
                OnFirmTypeChanging(value);
                ReportPropertyChanging("FirmType");
                _FirmType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirmType");
                OnFirmTypeChanged();
            }
        }
        private global::System.String _FirmType;
        partial void OnFirmTypeChanging(global::System.String value);
        partial void OnFirmTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_ProspectsGalleryContents_GLRY_Prospects", "GLRY_ProspectsGalleryContents")]
        public EntityCollection<ProspectsGalleryContents> GLRY_ProspectsGalleryContents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProspectsGalleryContents>("RepGlryModel.FK_GLRY_ProspectsGalleryContents_GLRY_Prospects", "GLRY_ProspectsGalleryContents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProspectsGalleryContents>("RepGlryModel.FK_GLRY_ProspectsGalleryContents_GLRY_Prospects", "GLRY_ProspectsGalleryContents", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepGlryModel", Name="ProspectsGalleryContents")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProspectsGalleryContents : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProspectsGalleryContents object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="propsectId">Initial value of the PropsectId property.</param>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="addedDate">Initial value of the AddedDate property.</param>
        public static ProspectsGalleryContents CreateProspectsGalleryContents(global::System.Int32 id, global::System.Guid propsectId, global::System.Int32 objectId, global::System.DateTime addedDate)
        {
            ProspectsGalleryContents prospectsGalleryContents = new ProspectsGalleryContents();
            prospectsGalleryContents.Id = id;
            prospectsGalleryContents.PropsectId = propsectId;
            prospectsGalleryContents.ObjectId = objectId;
            prospectsGalleryContents.AddedDate = addedDate;
            return prospectsGalleryContents;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PropsectId
        {
            get
            {
                return _PropsectId;
            }
            set
            {
                OnPropsectIdChanging(value);
                ReportPropertyChanging("PropsectId");
                _PropsectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PropsectId");
                OnPropsectIdChanged();
            }
        }
        private global::System.Guid _PropsectId;
        partial void OnPropsectIdChanging(global::System.Guid value);
        partial void OnPropsectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                OnObjectIdChanging(value);
                ReportPropertyChanging("ObjectId");
                _ObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectId");
                OnObjectIdChanged();
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddedDate
        {
            get
            {
                return _AddedDate;
            }
            set
            {
                OnAddedDateChanging(value);
                ReportPropertyChanging("AddedDate");
                _AddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddedDate");
                OnAddedDateChanged();
            }
        }
        private global::System.DateTime _AddedDate;
        partial void OnAddedDateChanging(global::System.DateTime value);
        partial void OnAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TableType
        {
            get
            {
                return _TableType;
            }
            set
            {
                OnTableTypeChanging(value);
                ReportPropertyChanging("TableType");
                _TableType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TableType");
                OnTableTypeChanged();
            }
        }
        private global::System.String _TableType;
        partial void OnTableTypeChanging(global::System.String value);
        partial void OnTableTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_GalleryNotes_GLRY_ProspectsGalleryContents", "GalleryNotes")]
        public EntityCollection<GalleryNotes> GLRY_GalleryNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GalleryNotes>("RepGlryModel.FK_GLRY_GalleryNotes_GLRY_ProspectsGalleryContents", "GalleryNotes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GalleryNotes>("RepGlryModel.FK_GLRY_GalleryNotes_GLRY_ProspectsGalleryContents", "GalleryNotes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_ProspectsGalleryContents_GLRY_Prospects", "Prospects")]
        public Prospects GLRY_Prospects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prospects>("RepGlryModel.FK_GLRY_ProspectsGalleryContents_GLRY_Prospects", "Prospects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prospects>("RepGlryModel.FK_GLRY_ProspectsGalleryContents_GLRY_Prospects", "Prospects").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Prospects> GLRY_ProspectsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prospects>("RepGlryModel.FK_GLRY_ProspectsGalleryContents_GLRY_Prospects", "Prospects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Prospects>("RepGlryModel.FK_GLRY_ProspectsGalleryContents_GLRY_Prospects", "Prospects", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepGlryModel", Name="Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Roles object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        public static Roles CreateRoles(global::System.Int32 roleId, global::System.String roleName, global::System.String applicationName)
        {
            Roles roles = new Roles();
            roles.RoleId = roleId;
            roles.RoleName = roleName;
            roles.ApplicationName = applicationName;
            return roles;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                if (_ApplicationName != value)
                {
                    OnApplicationNameChanging(value);
                    ReportPropertyChanging("ApplicationName");
                    _ApplicationName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ApplicationName");
                    OnApplicationNameChanged();
                }
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "GLRY_UsersInRoles", "GLRY_Users")]
        public EntityCollection<Users> GLRY_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Users>("RepGlryModel.GLRY_UsersInRoles", "GLRY_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Users>("RepGlryModel.GLRY_UsersInRoles", "GLRY_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepGlryModel", Name="SampleReportPages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SampleReportPages : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SampleReportPages object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="pageNo">Initial value of the PageNo property.</param>
        /// <param name="pageImage">Initial value of the PageImage property.</param>
        /// <param name="thumbnail">Initial value of the Thumbnail property.</param>
        /// <param name="viewCount">Initial value of the ViewCount property.</param>
        /// <param name="sampleReportId">Initial value of the SampleReportId property.</param>
        public static SampleReportPages CreateSampleReportPages(global::System.Int32 id, global::System.Int16 pageNo, global::System.Byte[] pageImage, global::System.Byte[] thumbnail, global::System.Int32 viewCount, global::System.Int32 sampleReportId)
        {
            SampleReportPages sampleReportPages = new SampleReportPages();
            sampleReportPages.Id = id;
            sampleReportPages.PageNo = pageNo;
            sampleReportPages.PageImage = pageImage;
            sampleReportPages.Thumbnail = thumbnail;
            sampleReportPages.ViewCount = viewCount;
            sampleReportPages.SampleReportId = sampleReportId;
            return sampleReportPages;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 PageNo
        {
            get
            {
                return _PageNo;
            }
            set
            {
                OnPageNoChanging(value);
                ReportPropertyChanging("PageNo");
                _PageNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PageNo");
                OnPageNoChanged();
            }
        }
        private global::System.Int16 _PageNo;
        partial void OnPageNoChanging(global::System.Int16 value);
        partial void OnPageNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PageImage
        {
            get
            {
                return StructuralObject.GetValidValue(_PageImage);
            }
            set
            {
                OnPageImageChanging(value);
                ReportPropertyChanging("PageImage");
                _PageImage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PageImage");
                OnPageImageChanged();
            }
        }
        private global::System.Byte[] _PageImage;
        partial void OnPageImageChanging(global::System.Byte[] value);
        partial void OnPageImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Thumbnail
        {
            get
            {
                return StructuralObject.GetValidValue(_Thumbnail);
            }
            set
            {
                OnThumbnailChanging(value);
                ReportPropertyChanging("Thumbnail");
                _Thumbnail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Thumbnail");
                OnThumbnailChanged();
            }
        }
        private global::System.Byte[] _Thumbnail;
        partial void OnThumbnailChanging(global::System.Byte[] value);
        partial void OnThumbnailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ViewCount
        {
            get
            {
                return _ViewCount;
            }
            set
            {
                OnViewCountChanging(value);
                ReportPropertyChanging("ViewCount");
                _ViewCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewCount");
                OnViewCountChanged();
            }
        }
        private global::System.Int32 _ViewCount;
        partial void OnViewCountChanging(global::System.Int32 value);
        partial void OnViewCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SampleReportId
        {
            get
            {
                return _SampleReportId;
            }
            set
            {
                OnSampleReportIdChanging(value);
                ReportPropertyChanging("SampleReportId");
                _SampleReportId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SampleReportId");
                OnSampleReportIdChanged();
            }
        }
        private global::System.Int32 _SampleReportId;
        partial void OnSampleReportIdChanging(global::System.Int32 value);
        partial void OnSampleReportIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_SampleReportsGLRY_SampleReportPages", "SampleReports")]
        public SampleReports GLRY_SampleReports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SampleReports>("RepGlryModel.FK_GLRY_SampleReportsGLRY_SampleReportPages", "SampleReports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SampleReports>("RepGlryModel.FK_GLRY_SampleReportsGLRY_SampleReportPages", "SampleReports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SampleReports> GLRY_SampleReportsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SampleReports>("RepGlryModel.FK_GLRY_SampleReportsGLRY_SampleReportPages", "SampleReports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SampleReports>("RepGlryModel.FK_GLRY_SampleReportsGLRY_SampleReportPages", "SampleReports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepGlryModel", Name="SampleReports")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SampleReports : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SampleReports object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="presentationFile">Initial value of the PresentationFile property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="shortDescription">Initial value of the ShortDescription property.</param>
        /// <param name="longDescription">Initial value of the LongDescription property.</param>
        /// <param name="uploadedDate">Initial value of the UploadedDate property.</param>
        /// <param name="uploadedBy">Initial value of the UploadedBy property.</param>
        /// <param name="viewCount">Initial value of the ViewCount property.</param>
        /// <param name="firmType">Initial value of the FirmType property.</param>
        /// <param name="productType">Initial value of the ProductType property.</param>
        /// <param name="preRegisterPreView">Initial value of the PreRegisterPreView property.</param>
        public static SampleReports CreateSampleReports(global::System.Int32 id, global::System.Byte[] presentationFile, global::System.String name, global::System.String shortDescription, global::System.String longDescription, global::System.DateTime uploadedDate, global::System.Guid uploadedBy, global::System.Int32 viewCount, global::System.Int32 firmType, global::System.Int32 productType, global::System.Boolean preRegisterPreView)
        {
            SampleReports sampleReports = new SampleReports();
            sampleReports.Id = id;
            sampleReports.PresentationFile = presentationFile;
            sampleReports.Name = name;
            sampleReports.ShortDescription = shortDescription;
            sampleReports.LongDescription = longDescription;
            sampleReports.UploadedDate = uploadedDate;
            sampleReports.UploadedBy = uploadedBy;
            sampleReports.ViewCount = viewCount;
            sampleReports.FirmType = firmType;
            sampleReports.ProductType = productType;
            sampleReports.PreRegisterPreView = preRegisterPreView;
            return sampleReports;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PresentationFile
        {
            get
            {
                return StructuralObject.GetValidValue(_PresentationFile);
            }
            set
            {
                OnPresentationFileChanging(value);
                ReportPropertyChanging("PresentationFile");
                _PresentationFile = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PresentationFile");
                OnPresentationFileChanged();
            }
        }
        private global::System.Byte[] _PresentationFile;
        partial void OnPresentationFileChanging(global::System.Byte[] value);
        partial void OnPresentationFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortDescription
        {
            get
            {
                return _ShortDescription;
            }
            set
            {
                OnShortDescriptionChanging(value);
                ReportPropertyChanging("ShortDescription");
                _ShortDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortDescription");
                OnShortDescriptionChanged();
            }
        }
        private global::System.String _ShortDescription;
        partial void OnShortDescriptionChanging(global::System.String value);
        partial void OnShortDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LongDescription
        {
            get
            {
                return _LongDescription;
            }
            set
            {
                OnLongDescriptionChanging(value);
                ReportPropertyChanging("LongDescription");
                _LongDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LongDescription");
                OnLongDescriptionChanged();
            }
        }
        private global::System.String _LongDescription;
        partial void OnLongDescriptionChanging(global::System.String value);
        partial void OnLongDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UploadedDate
        {
            get
            {
                return _UploadedDate;
            }
            set
            {
                OnUploadedDateChanging(value);
                ReportPropertyChanging("UploadedDate");
                _UploadedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadedDate");
                OnUploadedDateChanged();
            }
        }
        private global::System.DateTime _UploadedDate;
        partial void OnUploadedDateChanging(global::System.DateTime value);
        partial void OnUploadedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UploadedBy
        {
            get
            {
                return _UploadedBy;
            }
            set
            {
                OnUploadedByChanging(value);
                ReportPropertyChanging("UploadedBy");
                _UploadedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadedBy");
                OnUploadedByChanged();
            }
        }
        private global::System.Guid _UploadedBy;
        partial void OnUploadedByChanging(global::System.Guid value);
        partial void OnUploadedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ViewCount
        {
            get
            {
                return _ViewCount;
            }
            set
            {
                OnViewCountChanging(value);
                ReportPropertyChanging("ViewCount");
                _ViewCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewCount");
                OnViewCountChanged();
            }
        }
        private global::System.Int32 _ViewCount;
        partial void OnViewCountChanging(global::System.Int32 value);
        partial void OnViewCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FirmType
        {
            get
            {
                return _FirmType;
            }
            set
            {
                OnFirmTypeChanging(value);
                ReportPropertyChanging("FirmType");
                _FirmType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirmType");
                OnFirmTypeChanged();
            }
        }
        private global::System.Int32 _FirmType;
        partial void OnFirmTypeChanging(global::System.Int32 value);
        partial void OnFirmTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductType
        {
            get
            {
                return _ProductType;
            }
            set
            {
                OnProductTypeChanging(value);
                ReportPropertyChanging("ProductType");
                _ProductType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductType");
                OnProductTypeChanged();
            }
        }
        private global::System.Int32 _ProductType;
        partial void OnProductTypeChanging(global::System.Int32 value);
        partial void OnProductTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PreRegisterPreView
        {
            get
            {
                return _PreRegisterPreView;
            }
            set
            {
                OnPreRegisterPreViewChanging(value);
                ReportPropertyChanging("PreRegisterPreView");
                _PreRegisterPreView = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreRegisterPreView");
                OnPreRegisterPreViewChanged();
            }
        }
        private global::System.Boolean _PreRegisterPreView;
        partial void OnPreRegisterPreViewChanging(global::System.Boolean value);
        partial void OnPreRegisterPreViewChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_SampleReports_GLRY_FirmTypes", "GLRY_FirmTypes")]
        public FirmTypes GLRY_FirmTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FirmTypes>("RepGlryModel.FK_GLRY_SampleReports_GLRY_FirmTypes", "GLRY_FirmTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FirmTypes>("RepGlryModel.FK_GLRY_SampleReports_GLRY_FirmTypes", "GLRY_FirmTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FirmTypes> GLRY_FirmTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FirmTypes>("RepGlryModel.FK_GLRY_SampleReports_GLRY_FirmTypes", "GLRY_FirmTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FirmTypes>("RepGlryModel.FK_GLRY_SampleReports_GLRY_FirmTypes", "GLRY_FirmTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_SampleReports_GLRY_ProductType", "GLRY_ProductTypes")]
        public ProductTypes GLRY_ProductTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductTypes>("RepGlryModel.FK_GLRY_SampleReports_GLRY_ProductType", "GLRY_ProductTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductTypes>("RepGlryModel.FK_GLRY_SampleReports_GLRY_ProductType", "GLRY_ProductTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductTypes> GLRY_ProductTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductTypes>("RepGlryModel.FK_GLRY_SampleReports_GLRY_ProductType", "GLRY_ProductTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductTypes>("RepGlryModel.FK_GLRY_SampleReports_GLRY_ProductType", "GLRY_ProductTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_SampleReportsGLRY_SampleReportPages", "GLRY_SampleReportPages")]
        public EntityCollection<SampleReportPages> GLRY_SampleReportPages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SampleReportPages>("RepGlryModel.FK_GLRY_SampleReportsGLRY_SampleReportPages", "GLRY_SampleReportPages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SampleReportPages>("RepGlryModel.FK_GLRY_SampleReportsGLRY_SampleReportPages", "GLRY_SampleReportPages", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepGlryModel", Name="TemplateDesignPages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TemplateDesignPages : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TemplateDesignPages object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="pageNo">Initial value of the PageNo property.</param>
        /// <param name="pageImage">Initial value of the PageImage property.</param>
        /// <param name="thumbnail">Initial value of the Thumbnail property.</param>
        /// <param name="viewCount">Initial value of the ViewCount property.</param>
        /// <param name="templateDesignId">Initial value of the TemplateDesignId property.</param>
        public static TemplateDesignPages CreateTemplateDesignPages(global::System.Int32 id, global::System.Int16 pageNo, global::System.Byte[] pageImage, global::System.Byte[] thumbnail, global::System.Int32 viewCount, global::System.Int32 templateDesignId)
        {
            TemplateDesignPages templateDesignPages = new TemplateDesignPages();
            templateDesignPages.Id = id;
            templateDesignPages.PageNo = pageNo;
            templateDesignPages.PageImage = pageImage;
            templateDesignPages.Thumbnail = thumbnail;
            templateDesignPages.ViewCount = viewCount;
            templateDesignPages.TemplateDesignId = templateDesignId;
            return templateDesignPages;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 PageNo
        {
            get
            {
                return _PageNo;
            }
            set
            {
                OnPageNoChanging(value);
                ReportPropertyChanging("PageNo");
                _PageNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PageNo");
                OnPageNoChanged();
            }
        }
        private global::System.Int16 _PageNo;
        partial void OnPageNoChanging(global::System.Int16 value);
        partial void OnPageNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PageImage
        {
            get
            {
                return StructuralObject.GetValidValue(_PageImage);
            }
            set
            {
                OnPageImageChanging(value);
                ReportPropertyChanging("PageImage");
                _PageImage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PageImage");
                OnPageImageChanged();
            }
        }
        private global::System.Byte[] _PageImage;
        partial void OnPageImageChanging(global::System.Byte[] value);
        partial void OnPageImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Thumbnail
        {
            get
            {
                return StructuralObject.GetValidValue(_Thumbnail);
            }
            set
            {
                OnThumbnailChanging(value);
                ReportPropertyChanging("Thumbnail");
                _Thumbnail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Thumbnail");
                OnThumbnailChanged();
            }
        }
        private global::System.Byte[] _Thumbnail;
        partial void OnThumbnailChanging(global::System.Byte[] value);
        partial void OnThumbnailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ViewCount
        {
            get
            {
                return _ViewCount;
            }
            set
            {
                OnViewCountChanging(value);
                ReportPropertyChanging("ViewCount");
                _ViewCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewCount");
                OnViewCountChanged();
            }
        }
        private global::System.Int32 _ViewCount;
        partial void OnViewCountChanging(global::System.Int32 value);
        partial void OnViewCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TemplateDesignId
        {
            get
            {
                return _TemplateDesignId;
            }
            set
            {
                OnTemplateDesignIdChanging(value);
                ReportPropertyChanging("TemplateDesignId");
                _TemplateDesignId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateDesignId");
                OnTemplateDesignIdChanged();
            }
        }
        private global::System.Int32 _TemplateDesignId;
        partial void OnTemplateDesignIdChanging(global::System.Int32 value);
        partial void OnTemplateDesignIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_DesignsGLRY_DesignPages", "TemplateDesigns")]
        public TemplateDesigns GLRY_TemplateDesigns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TemplateDesigns>("RepGlryModel.FK_GLRY_DesignsGLRY_DesignPages", "TemplateDesigns").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TemplateDesigns>("RepGlryModel.FK_GLRY_DesignsGLRY_DesignPages", "TemplateDesigns").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TemplateDesigns> GLRY_TemplateDesignsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TemplateDesigns>("RepGlryModel.FK_GLRY_DesignsGLRY_DesignPages", "TemplateDesigns");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TemplateDesigns>("RepGlryModel.FK_GLRY_DesignsGLRY_DesignPages", "TemplateDesigns", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepGlryModel", Name="TemplateDesigns")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TemplateDesigns : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TemplateDesigns object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="presentationFile">Initial value of the PresentationFile property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="shortDescription">Initial value of the ShortDescription property.</param>
        /// <param name="longDescription">Initial value of the LongDescription property.</param>
        /// <param name="uploadedDate">Initial value of the UploadedDate property.</param>
        /// <param name="uploadedBy">Initial value of the UploadedBy property.</param>
        /// <param name="viewCount">Initial value of the ViewCount property.</param>
        /// <param name="firmType">Initial value of the FirmType property.</param>
        /// <param name="productType">Initial value of the ProductType property.</param>
        /// <param name="preRegisterPreView">Initial value of the PreRegisterPreView property.</param>
        public static TemplateDesigns CreateTemplateDesigns(global::System.Int32 id, global::System.Byte[] presentationFile, global::System.String name, global::System.String shortDescription, global::System.String longDescription, global::System.DateTime uploadedDate, global::System.Guid uploadedBy, global::System.Int32 viewCount, global::System.Int32 firmType, global::System.Int32 productType, global::System.Boolean preRegisterPreView)
        {
            TemplateDesigns templateDesigns = new TemplateDesigns();
            templateDesigns.Id = id;
            templateDesigns.PresentationFile = presentationFile;
            templateDesigns.Name = name;
            templateDesigns.ShortDescription = shortDescription;
            templateDesigns.LongDescription = longDescription;
            templateDesigns.UploadedDate = uploadedDate;
            templateDesigns.UploadedBy = uploadedBy;
            templateDesigns.ViewCount = viewCount;
            templateDesigns.FirmType = firmType;
            templateDesigns.ProductType = productType;
            templateDesigns.PreRegisterPreView = preRegisterPreView;
            return templateDesigns;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PresentationFile
        {
            get
            {
                return StructuralObject.GetValidValue(_PresentationFile);
            }
            set
            {
                OnPresentationFileChanging(value);
                ReportPropertyChanging("PresentationFile");
                _PresentationFile = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PresentationFile");
                OnPresentationFileChanged();
            }
        }
        private global::System.Byte[] _PresentationFile;
        partial void OnPresentationFileChanging(global::System.Byte[] value);
        partial void OnPresentationFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortDescription
        {
            get
            {
                return _ShortDescription;
            }
            set
            {
                OnShortDescriptionChanging(value);
                ReportPropertyChanging("ShortDescription");
                _ShortDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortDescription");
                OnShortDescriptionChanged();
            }
        }
        private global::System.String _ShortDescription;
        partial void OnShortDescriptionChanging(global::System.String value);
        partial void OnShortDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LongDescription
        {
            get
            {
                return _LongDescription;
            }
            set
            {
                OnLongDescriptionChanging(value);
                ReportPropertyChanging("LongDescription");
                _LongDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LongDescription");
                OnLongDescriptionChanged();
            }
        }
        private global::System.String _LongDescription;
        partial void OnLongDescriptionChanging(global::System.String value);
        partial void OnLongDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UploadedDate
        {
            get
            {
                return _UploadedDate;
            }
            set
            {
                OnUploadedDateChanging(value);
                ReportPropertyChanging("UploadedDate");
                _UploadedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadedDate");
                OnUploadedDateChanged();
            }
        }
        private global::System.DateTime _UploadedDate;
        partial void OnUploadedDateChanging(global::System.DateTime value);
        partial void OnUploadedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UploadedBy
        {
            get
            {
                return _UploadedBy;
            }
            set
            {
                OnUploadedByChanging(value);
                ReportPropertyChanging("UploadedBy");
                _UploadedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadedBy");
                OnUploadedByChanged();
            }
        }
        private global::System.Guid _UploadedBy;
        partial void OnUploadedByChanging(global::System.Guid value);
        partial void OnUploadedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ViewCount
        {
            get
            {
                return _ViewCount;
            }
            set
            {
                OnViewCountChanging(value);
                ReportPropertyChanging("ViewCount");
                _ViewCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewCount");
                OnViewCountChanged();
            }
        }
        private global::System.Int32 _ViewCount;
        partial void OnViewCountChanging(global::System.Int32 value);
        partial void OnViewCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FirmType
        {
            get
            {
                return _FirmType;
            }
            set
            {
                OnFirmTypeChanging(value);
                ReportPropertyChanging("FirmType");
                _FirmType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirmType");
                OnFirmTypeChanged();
            }
        }
        private global::System.Int32 _FirmType;
        partial void OnFirmTypeChanging(global::System.Int32 value);
        partial void OnFirmTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductType
        {
            get
            {
                return _ProductType;
            }
            set
            {
                OnProductTypeChanging(value);
                ReportPropertyChanging("ProductType");
                _ProductType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductType");
                OnProductTypeChanged();
            }
        }
        private global::System.Int32 _ProductType;
        partial void OnProductTypeChanging(global::System.Int32 value);
        partial void OnProductTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PreRegisterPreView
        {
            get
            {
                return _PreRegisterPreView;
            }
            set
            {
                OnPreRegisterPreViewChanging(value);
                ReportPropertyChanging("PreRegisterPreView");
                _PreRegisterPreView = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreRegisterPreView");
                OnPreRegisterPreViewChanged();
            }
        }
        private global::System.Boolean _PreRegisterPreView;
        partial void OnPreRegisterPreViewChanging(global::System.Boolean value);
        partial void OnPreRegisterPreViewChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_Designs_GLRY_FirmTypes", "FirmTypes")]
        public FirmTypes GLRY_FirmTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FirmTypes>("RepGlryModel.FK_GLRY_Designs_GLRY_FirmTypes", "FirmTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FirmTypes>("RepGlryModel.FK_GLRY_Designs_GLRY_FirmTypes", "FirmTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FirmTypes> GLRY_FirmTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FirmTypes>("RepGlryModel.FK_GLRY_Designs_GLRY_FirmTypes", "FirmTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FirmTypes>("RepGlryModel.FK_GLRY_Designs_GLRY_FirmTypes", "FirmTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_Designs_GLRY_ProductType", "ProductTypes")]
        public ProductTypes GLRY_ProductTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductTypes>("RepGlryModel.FK_GLRY_Designs_GLRY_ProductType", "ProductTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductTypes>("RepGlryModel.FK_GLRY_Designs_GLRY_ProductType", "ProductTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductTypes> GLRY_ProductTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductTypes>("RepGlryModel.FK_GLRY_Designs_GLRY_ProductType", "ProductTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductTypes>("RepGlryModel.FK_GLRY_Designs_GLRY_ProductType", "ProductTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "FK_GLRY_DesignsGLRY_DesignPages", "GLRY_TemplateDesignPages")]
        public EntityCollection<TemplateDesignPages> GLRY_TemplateDesignPages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TemplateDesignPages>("RepGlryModel.FK_GLRY_DesignsGLRY_DesignPages", "GLRY_TemplateDesignPages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TemplateDesignPages>("RepGlryModel.FK_GLRY_DesignsGLRY_DesignPages", "GLRY_TemplateDesignPages", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepGlryModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="registeredDate">Initial value of the RegisteredDate property.</param>
        public static Users CreateUsers(global::System.Int32 userId, global::System.String userName, global::System.String applicationName, global::System.String email, global::System.String password, global::System.Boolean isApproved, global::System.DateTime registeredDate)
        {
            Users users = new Users();
            users.UserId = userId;
            users.UserName = userName;
            users.ApplicationName = applicationName;
            users.Email = email;
            users.Password = password;
            users.IsApproved = isApproved;
            users.RegisteredDate = registeredDate;
            return users;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLoginDate;
        partial void OnLastLoginDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegisteredDate
        {
            get
            {
                return _RegisteredDate;
            }
            set
            {
                OnRegisteredDateChanging(value);
                ReportPropertyChanging("RegisteredDate");
                _RegisteredDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegisteredDate");
                OnRegisteredDateChanged();
            }
        }
        private global::System.DateTime _RegisteredDate;
        partial void OnRegisteredDateChanging(global::System.DateTime value);
        partial void OnRegisteredDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepGlryModel", "GLRY_UsersInRoles", "GLRY_Roles")]
        public EntityCollection<Roles> GLRY_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Roles>("RepGlryModel.GLRY_UsersInRoles", "GLRY_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Roles>("RepGlryModel.GLRY_UsersInRoles", "GLRY_Roles", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
